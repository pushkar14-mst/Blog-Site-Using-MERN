{"ast":null,"code":"var _jsxFileName = \"F:\\\\Reader's Bay\\\\Project\\\\client\\\\src\\\\components\\\\helpers\\\\ReactQuillEditor\\\\CustomToolbar.jsx\";\nimport React from \"react\";\nimport formats from \"./ToolbarOptions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst renderOptions = formatData => {\n  const {\n    className,\n    options\n  } = formatData;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      selected: \"selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), options.map(value => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\nconst renderSingle = formatData => {\n  const {\n    className,\n    value\n  } = formatData;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    value: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\nconst CustomToolbar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  id: \"toolbar\",\n  children: formats.map(classes => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ql-formats\",\n      children: classes.map(formatData => {\n        return formatData.options ? renderOptions(formatData) : renderSingle(formatData);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  })\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n_c = CustomToolbar;\nexport default CustomToolbar;\nvar _c;\n$RefreshReg$(_c, \"CustomToolbar\");","map":{"version":3,"names":["React","formats","renderOptions","formatData","className","options","map","value","renderSingle","CustomToolbar","classes"],"sources":["F:/Reader's Bay/Project/client/src/components/helpers/ReactQuillEditor/CustomToolbar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport formats from \"./ToolbarOptions.js\";\r\n\r\nconst renderOptions = (formatData) => {\r\n  const { className, options } = formatData;\r\n  return (\r\n    <select className={className}>\r\n      <option selected=\"selected\"></option>\r\n      {options.map((value) => {\r\n        return <option value={value}></option>;\r\n      })}\r\n    </select>\r\n  );\r\n};\r\nconst renderSingle = (formatData) => {\r\n  const { className, value } = formatData;\r\n  return <button className={className} value={value}></button>;\r\n};\r\nconst CustomToolbar = () => (\r\n  <div id=\"toolbar\">\r\n    {formats.map((classes) => {\r\n      return (\r\n        <span className=\"ql-formats\">\r\n          {classes.map((formatData) => {\r\n            return formatData.options\r\n              ? renderOptions(formatData)\r\n              : renderSingle(formatData);\r\n          })}\r\n        </span>\r\n      );\r\n    })}\r\n  </div>\r\n);\r\nexport default CustomToolbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,qBAAqB;AAAC;AAE1C,MAAMC,aAAa,GAAIC,UAAU,IAAK;EACpC,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGF,UAAU;EACzC,oBACE;IAAQ,SAAS,EAAEC,SAAU;IAAA,wBAC3B;MAAQ,QAAQ,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAU,EACpCC,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;MACtB,oBAAO;QAAQ,KAAK,EAAEA;MAAM;QAAA;QAAA;QAAA;MAAA,QAAU;IACxC,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAEb,CAAC;AACD,MAAMC,YAAY,GAAIL,UAAU,IAAK;EACnC,MAAM;IAAEC,SAAS;IAAEG;EAAM,CAAC,GAAGJ,UAAU;EACvC,oBAAO;IAAQ,SAAS,EAAEC,SAAU;IAAC,KAAK,EAAEG;EAAM;IAAA;IAAA;IAAA;EAAA,QAAU;AAC9D,CAAC;AACD,MAAME,aAAa,GAAG,mBACpB;EAAK,EAAE,EAAC,SAAS;EAAA,UACdR,OAAO,CAACK,GAAG,CAAEI,OAAO,IAAK;IACxB,oBACE;MAAM,SAAS,EAAC,YAAY;MAAA,UACzBA,OAAO,CAACJ,GAAG,CAAEH,UAAU,IAAK;QAC3B,OAAOA,UAAU,CAACE,OAAO,GACrBH,aAAa,CAACC,UAAU,CAAC,GACzBK,YAAY,CAACL,UAAU,CAAC;MAC9B,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAEX,CAAC;AAAC;EAAA;EAAA;EAAA;AAAA,QAEL;AAAC,KAdIM,aAAa;AAenB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}